import pandas as pd #Python library used for working with data sets
import numpy as np #Python library used for working with arrays
import seaborn as sn # library for making statistical graphics in Python
import random as rn 
import matplotlib.pyplot as mat #used to create 2D graphs and plots by using python scripts
from sklearn.model_selection import train_test_split 
from sklearn.naive_bayes import GaussianNB,MultinomialNB
from sklearn.metrics import accuracy_score 

_____________________________________________________________________________________________


DataFrame1=pd.read_csv('heart.csv') #Read a comma-separated values (csv) file into DataFrame
DataFrame1

_____________________________________________________________________________________________


DataFrame2=pd.read_csv('AirQuality.csv',sep=';') #Read a comma-separated values (csv) file into DataFrame
DataFrame2

_____________________________________________________________________________________________


DataFrame1.isna().sum().sum() #Detect missing values for an array-like object
#.sum() sums up the numbers in the list

_____________________________________________________________________________________________

DataFrame1.dtypes

_____________________________________________________________________________________________

DataFrame2.dtypes
_____________________________________________________________________________________________


#DATA CLEANING

DataFrame3=DataFrame2.iloc[:,:15] #iloc stands for “integer location”.
#It is used to select rows and columns from a Pandas DataFrame or a Series using integer-b

DataFrame3

_____________________________________________________________________________________________

DataFrame3.isna().sum().sum()
_____________________________________________________________________________________________

DataFrame4=DataFrame3.dropna()

_____________________________________________________________________________________________

DataFrame4
_____________________________________________________________________________________________

#Replacing the Object dtype of Date to Date dtype
DataFrame4['Date']=pd.to_datetime(DataFrame4['Date']);
_____________________________________________________________________________________________

#To Replace the Comma's with Dot
DataFrame4.replace(to_replace=',',value='.',regex=True,inplace=True)
DataFrame4
_____________________________________________________________________________________________

DataFrame4.drop_duplicates(inplace=True)
DataFrame4 #Drop Duplicates

_____________________________________________________________________________________________

DataFrame1
_____________________________________________________________________________________________

DataFrame4

_____________________________________________________________________________________________


#DATA INTEGRATION

DataSet1=DataFrame4[['Date','Time','T','RH','AH']].loc[0:50]
DataSet1.head()

_____________________________________________________________________________________________

DataSet2=DataFrame4[['Date','Time','T','RH','AH']].loc[51:100]
DataSet2.head()

_____________________________________________________________________________________________

DataSet3=DataFrame1[['age','sex','cp','ca','target']].loc[50:100]
DataSet3.head()

_____________________________________________________________________________________________


Merged=pd.concat([DataSet1,DataSet2])
Merged

_____________________________________________________________________________________________

#Data Transformation

DataFrame1.loc[DataFrame1['sex']==1,'sex']='M' #Replacing 1 with M
DataFrame1.loc[DataFrame1['sex']==0,'sex']='F' #Replacing 0 with F
DataFrame1.head()

_____________________________________________________________________________________________


from sklearn.preprocessing import LabelEncoder
labelencoder=LabelEncoder()
DataFrame1["sex"]=labelencoder.fit_transform(DataFrame1["sex"])
DataFrame1 #used to encode categorical variables into numerical labels


_____________________________________________________________________________________________

#Error Correction

DataFrame1[DataFrame1['ca']==4]
DataFrame1 = DataFrame1.fillna(DataFrame1.median())
DataFrame1.isnull().sum()
_____________________________________________________________________________________________

DataFrame1

_____________________________________________________________________________________________


#Model Building

X_train, X_test, y_train, y_test = train_test_split(DataFrame1.iloc[:,:-1], DataFrame1.iloc[:,-1], test_size = 0.3, random_state = 0)
X_train.shape, X_test.shape,y_train.shape
_____________________________________________________________________________________________


gnb = GaussianNB()
gnb.fit(X_train, y_train)
#fitting a Gaussian Naive Bayes (GNB) model on the training data

_____________________________________________________________________________________________

y_pred = gnb.predict(X_test)
y_pred

_____________________________________________________________________________________________

print('Model accuracy score: {0:0.4f}'. format(accuracy_score(y_test, y_pred)))


_____________________________________________________________________________________________

